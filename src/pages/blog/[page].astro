---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import Navbar from "../../components/Navbar.astro";

export async function getStaticPaths({ paginate }) {
  const posts = await getCollection("blog");
  posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  return paginate(posts, { pageSize: 6 });
}

// Definisikan tipe untuk objek pagination
interface PaginationProps {
  page: {
    data: any[];
    start: number;
    end: number;
    size: number;
    total: number;
    currentPage: number;
    lastPage: number;
    url: {
      current: string;
      prev: string | undefined;
      next: string | undefined;
    }
  }
}

const { page } = Astro.props as PaginationProps;

const allPosts = await getCollection("blog");
const searchData = allPosts.map((post) => ({
  title: post.data.title,
  description: post.data.description,
  slug: post.slug,
  pubDate: post.data.pubDate.toISOString().split("T")[0],
  author: post.data.author,
}));

const currentUrl = new URL(Astro.request.url);
const canonicalURL = currentUrl.href;
const pageTitle = page.currentPage === 1 ? "Blog" : `Blog - Page ${page.currentPage}`;
const pageDescription = "Artikel terbaru tentang WhatsApp Marketing, automation, dan strategi bisnis digital dari DripSender";
---

<Layout 
  title={pageTitle} 
  description={pageDescription}
  url={canonicalURL}
>
  <header class="text-gray-800 bg-gray-100 dark:bg-gray-800 dark:text-white">
    <Navbar />
  </header>
  <div class="px-4 py-12 mx-auto max-w-7xl sm:px-6 lg:px-8">
    <h1 class="mb-8 text-3xl font-bold text-gray-900 dark:text-white">Blog Posts</h1>

    <!-- Search input -->
    <div class="mb-8">
      <input
        type="text"
        id="search-input"
        placeholder="Search blog posts..."
        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-cyan-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
      />
    </div>

    <!-- Search results -->
    <div id="search-results" class="hidden mb-8">
      <h2 class="mb-4 text-xl font-semibold text-gray-900 dark:text-white">Search Results</h2>
      <ul id="search-results-list"></ul>
    </div>

    <!-- Blog posts grid -->
    <div id="blog-posts-grid" class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
      {
        page.data.map((post) => (
          <article class="overflow-hidden bg-white rounded-lg shadow-lg dark:bg-gray-800">
            <img src={post.data.thumbnail || "https://via.placeholder.com/400x200"} alt={post.data.title} class="object-cover w-full h-48" />
            <div class="p-6">
              <h2 class="mb-2 text-xl font-semibold text-gray-900 dark:text-white">
                <a href={`/blog/${post.slug}`} class="hover:underline">
                  {post.data.title}
                </a>
              </h2>
              <p class="mb-4 text-sm text-gray-600 dark:text-gray-300">{post.data.description}</p>
              <div class="flex items-center justify-between">
                <span class="text-sm text-gray-500 dark:text-gray-400">{new Date(post.data.pubDate).toLocaleDateString()}</span>
                <a href={`/blog/${post.slug}`} class="text-cyan-600 dark:text-cyan-400 hover:underline">
                  Read more
                </a>
              </div>
            </div>
          </article>
        ))
      }
    </div>

    <!-- Pagination -->
    <nav class="flex items-center justify-center mt-8 space-x-4">
      {
        page.url.prev ? (
          <a href={page.url.prev} class="px-3 py-2 text-white rounded-md bg-cyan-500 hover:bg-cyan-600">
            &larr; Previous
          </a>
        ) : (
          <span class="px-3 py-2 text-gray-500 bg-gray-300 rounded-md cursor-not-allowed">&larr; Previous</span>
        )
      }
      <span class="text-gray-800 dark:text-cyan-200">Page {page.currentPage} of {page.lastPage}</span>
      {
        page.url.next ? (
          <a href={page.url.next} class="px-3 py-2 text-white rounded-md bg-cyan-500 hover:bg-cyan-600">
            Next &rarr;
          </a>
        ) : (
          <span class="px-3 py-2 text-gray-500 bg-gray-300 rounded-md cursor-not-allowed">Next &rarr;</span>
        )
      }
    </nav>
  </div>

  <script define:vars={{ searchData }}>
    const searchInput = document.getElementById("search-input");
    const searchResults = document.getElementById("search-results");
    const searchResultsList = document.getElementById("search-results-list");
    const blogPostsGrid = document.getElementById("blog-posts-grid");
    const paginationNav = document.querySelector("nav");

    function performSearch(query) {
      const results = searchData.filter(
        (item) => item.title.toLowerCase().includes(query.toLowerCase()) || item.description.toLowerCase().includes(query.toLowerCase())
      );

      searchResultsList.innerHTML = "";

      if (results.length > 0) {
        results.forEach((result) => {
          const li = document.createElement("li");
          li.className = "mb-4 bg-white dark:bg-gray-800 shadow rounded-lg overflow-hidden";
          li.innerHTML = `
            <div class="p-4">
              <a href="/blog/${result.slug}" class="text-lg font-semibold text-cyan-600 dark:text-cyan-400 hover:underline">
                ${result.title}
              </a>
              <p class="mt-1 text-sm text-gray-600 dark:text-gray-300">${result.description}</p>
              <div class="flex items-center justify-between mt-2">
                <span class="text-sm text-gray-500 dark:text-gray-400">${result.pubDate}</span>
                <span class="text-sm text-gray-500 dark:text-gray-400">${result.author}</span>
              </div>
            </div>
          `;
          searchResultsList.appendChild(li);
        });
        searchResults.classList.remove("hidden");
        blogPostsGrid.classList.add("hidden");
        paginationNav.classList.add("hidden");
      } else {
        searchResults.classList.add("hidden");
        blogPostsGrid.classList.remove("hidden");
        paginationNav.classList.remove("hidden");
      }
    }

    searchInput.addEventListener("input", (e) => {
      const query = e.target.value.trim();
      if (query.length > 2) {
        performSearch(query);
      } else {
        searchResults.classList.add("hidden");
        blogPostsGrid.classList.remove("hidden");
        paginationNav.classList.remove("hidden");
      }
    });
  </script>
</Layout>
